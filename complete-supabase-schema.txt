-- ============================================================
-- COMPLETE SUPABASE DATABASE SCHEMA
-- Pizza Restaurant Management System
-- ============================================================

-- Enable UUID extension
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- ============================================================
-- DROP ALL EXISTING TABLES AND TRIGGERS (START FRESH)
-- ============================================================

-- Drop all triggers first
DROP TRIGGER IF EXISTS update_categories_updated_at ON categories;
DROP TRIGGER IF EXISTS update_menu_sub_categories_updated_at ON menu_sub_categories;
DROP TRIGGER IF EXISTS update_menu_items_updated_at ON menu_items;
DROP TRIGGER IF EXISTS update_category_sizes_updated_at ON category_sizes;
DROP TRIGGER IF EXISTS update_menu_item_sizes_updated_at ON menu_item_sizes;
DROP TRIGGER IF EXISTS update_menu_item_size_toppings_updated_at ON menu_item_size_toppings;
DROP TRIGGER IF EXISTS update_toppings_updated_at ON toppings;
DROP TRIGGER IF EXISTS update_topping_categories_updated_at ON topping_categories;
DROP TRIGGER IF EXISTS update_specials_updated_at ON specials;
DROP TRIGGER IF EXISTS update_carousel_images_updated_at ON carousel_images;
DROP TRIGGER IF EXISTS update_customer_favorites_updated_at ON customer_favorites;
DROP TRIGGER IF EXISTS update_settings_updated_at ON settings;
DROP TRIGGER IF EXISTS update_about_sections_updated_at ON about_sections;
DROP TRIGGER IF EXISTS update_images_updated_at ON images;

-- Drop function
DROP FUNCTION IF EXISTS update_updated_at_column();

-- Drop all tables in dependency order
DROP TABLE IF EXISTS menu_item_size_toppings CASCADE;
DROP TABLE IF EXISTS menu_item_sizes CASCADE;
DROP TABLE IF EXISTS sub_category_sizes CASCADE;
DROP TABLE IF EXISTS category_sizes CASCADE;
DROP TABLE IF EXISTS menu_items CASCADE;
DROP TABLE IF EXISTS menu_sub_categories CASCADE;
DROP TABLE IF EXISTS toppings CASCADE;
DROP TABLE IF EXISTS topping_categories CASCADE;
DROP TABLE IF EXISTS specials CASCADE;
DROP TABLE IF EXISTS carousel_images CASCADE;
DROP TABLE IF EXISTS customer_favorites CASCADE;
DROP TABLE IF EXISTS about_sections CASCADE;
DROP TABLE IF EXISTS images CASCADE;
DROP TABLE IF EXISTS settings CASCADE;
DROP TABLE IF EXISTS categories CASCADE;

-- ============================================================
-- CREATE UPDATED_AT TRIGGER FUNCTION
-- ============================================================

CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- ============================================================
-- CORE TABLES
-- ============================================================

-- Categories table (main menu categories like Pizza, Wings, etc.)
CREATE TABLE categories (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  name VARCHAR(255) NOT NULL,
  is_active BOOLEAN DEFAULT true,
  order_num INTEGER DEFAULT 1,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Menu sub-categories table (sub-categories within main categories)
CREATE TABLE menu_sub_categories (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  name VARCHAR(255) NOT NULL,
  category_id UUID REFERENCES categories(id) ON DELETE CASCADE,
  display_order INTEGER DEFAULT 1,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Category sizes table (sizes tied to categories, not sub-categories)
CREATE TABLE category_sizes (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  category_id UUID REFERENCES categories(id) ON DELETE CASCADE,
  size_name VARCHAR(100) NOT NULL,
  display_order INTEGER DEFAULT 1,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Sub-category sizes junction table (which sizes are valid for each sub-category)
CREATE TABLE sub_category_sizes (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  sub_category_id UUID REFERENCES menu_sub_categories(id) ON DELETE CASCADE,
  category_size_id UUID REFERENCES category_sizes(id) ON DELETE CASCADE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  UNIQUE(sub_category_id, category_size_id)
);

-- Menu items table (individual menu items)
CREATE TABLE menu_items (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  name VARCHAR(255) NOT NULL,
  description TEXT,
  category_id UUID REFERENCES categories(id) ON DELETE CASCADE,
  sub_category_id UUID REFERENCES menu_sub_categories(id) ON DELETE SET NULL,
  image_id UUID REFERENCES images(id) ON DELETE SET NULL,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Menu item sizes table (size-based pricing for menu items)
CREATE TABLE menu_item_sizes (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  menu_item_id UUID REFERENCES menu_items(id) ON DELETE CASCADE,
  category_size_id UUID REFERENCES category_sizes(id) ON DELETE CASCADE,
  price DECIMAL(10,2) NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  UNIQUE(menu_item_id, category_size_id)
);

-- Topping categories table (groups of toppings like Cheese, Meats, etc.)
CREATE TABLE topping_categories (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  name VARCHAR(255) NOT NULL,
  menu_item_category_id UUID REFERENCES categories(id) ON DELETE CASCADE,
  order_num INTEGER DEFAULT 1,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Toppings table (individual toppings)
CREATE TABLE toppings (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  name VARCHAR(255) NOT NULL,
  price DECIMAL(10,2) NOT NULL DEFAULT 0,
  category_id UUID REFERENCES topping_categories(id) ON DELETE CASCADE,
  menu_item_category_id UUID REFERENCES categories(id) ON DELETE CASCADE,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Menu item size toppings table (size-specific topping availability)
CREATE TABLE menu_item_size_toppings (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  menu_item_size_id UUID REFERENCES menu_item_sizes(id) ON DELETE CASCADE,
  topping_id UUID REFERENCES toppings(id) ON DELETE CASCADE,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  UNIQUE(menu_item_size_id, topping_id)
);

-- ============================================================
-- CONTENT MANAGEMENT TABLES
-- ============================================================

-- Images table for centralized image management using Supabase Storage
CREATE TABLE images (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  name VARCHAR(255) NOT NULL,
  storage_path TEXT NOT NULL, -- Path in Supabase storage bucket
  public_url TEXT, -- Generated public URL from Supabase storage
  alt_text VARCHAR(255),
  file_size INTEGER, -- Size in bytes
  width INTEGER,
  height INTEGER,
  mime_type VARCHAR(100),
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Specials table
CREATE TABLE specials (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  name VARCHAR(255) NOT NULL,
  description TEXT,
  type VARCHAR(20) CHECK (type IN ('hourly', 'daily', 'weekly')),
  start_date DATE,
  end_date DATE,
  start_time TIME,
  end_time TIME,
  days_of_week INTEGER[],
  day_of_week INTEGER,
  menu_items TEXT[] DEFAULT '{}',
  discount_type VARCHAR(20) CHECK (discount_type IN ('percentage', 'flat')),
  discount_value DECIMAL(10,2) DEFAULT 0,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Carousel images table
CREATE TABLE carousel_images (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  url TEXT,
  title VARCHAR(255),
  subtitle VARCHAR(255),
  image_id UUID REFERENCES images(id) ON DELETE SET NULL,
  is_active BOOLEAN DEFAULT true,
  order_num INTEGER DEFAULT 1,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Customer favorites table
CREATE TABLE customer_favorites (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  title VARCHAR(255) NOT NULL,
  description TEXT,
  icon VARCHAR(10),
  is_active BOOLEAN DEFAULT true,
  order_num INTEGER DEFAULT 1,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- About page sections table
CREATE TABLE about_sections (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  type VARCHAR(20) CHECK (type IN ('text', 'image', 'text_with_image')) NOT NULL,
  title VARCHAR(255),
  content TEXT,
  image_url TEXT,
  image_alt_text VARCHAR(255),
  image_position VARCHAR(10) CHECK (image_position IN ('left', 'right')) DEFAULT 'right',
  links JSONB DEFAULT '[]', -- Array of {text, url, type: 'text'|'image'}
  text_overlay JSONB, -- {text, position: 'top'|'center'|'bottom', style}
  columns INTEGER DEFAULT 1 CHECK (columns IN (1, 2, 3)),
  order_num INTEGER DEFAULT 1,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Settings table (single row configuration)
CREATE TABLE settings (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  tax_rate DECIMAL(5,2) DEFAULT 8.5,
  delivery_fee DECIMAL(10,2) DEFAULT 2.99,
  business_hours JSONB DEFAULT '{
    "monday": {"open": "09:00", "close": "22:00", "closed": false},
    "tuesday": {"open": "09:00", "close": "22:00", "closed": false},
    "wednesday": {"open": "09:00", "close": "22:00", "closed": false},
    "thursday": {"open": "09:00", "close": "22:00", "closed": false},
    "friday": {"open": "09:00", "close": "23:00", "closed": false},
    "saturday": {"open": "10:00", "close": "23:00", "closed": false},
    "sunday": {"open": "10:00", "close": "21:00", "closed": false}
  }',
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ============================================================
-- INDEXES FOR PERFORMANCE
-- ============================================================

-- Categories
CREATE INDEX idx_categories_order ON categories(order_num);
CREATE INDEX idx_categories_active ON categories(is_active);

-- Menu sub-categories
CREATE INDEX idx_menu_sub_categories_category ON menu_sub_categories(category_id);
CREATE INDEX idx_menu_sub_categories_display_order ON menu_sub_categories(display_order);
CREATE INDEX idx_menu_sub_categories_active ON menu_sub_categories(is_active);

-- Category sizes
CREATE INDEX idx_category_sizes_category ON category_sizes(category_id);
CREATE INDEX idx_category_sizes_display_order ON category_sizes(display_order);
CREATE INDEX idx_category_sizes_active ON category_sizes(is_active);

-- Sub-category sizes
CREATE INDEX idx_sub_category_sizes_sub_category ON sub_category_sizes(sub_category_id);
CREATE INDEX idx_sub_category_sizes_size ON sub_category_sizes(category_size_id);

-- Menu items
CREATE INDEX idx_menu_items_category ON menu_items(category_id);
CREATE INDEX idx_menu_items_sub_category ON menu_items(sub_category_id);
CREATE INDEX idx_menu_items_active ON menu_items(is_active);
CREATE INDEX idx_menu_items_image ON menu_items(image_id);

-- Menu item sizes
CREATE INDEX idx_menu_item_sizes_item ON menu_item_sizes(menu_item_id);
CREATE INDEX idx_menu_item_sizes_size ON menu_item_sizes(category_size_id);

-- Menu item size toppings
CREATE INDEX idx_menu_item_size_toppings_item_size ON menu_item_size_toppings(menu_item_size_id);
CREATE INDEX idx_menu_item_size_toppings_topping ON menu_item_size_toppings(topping_id);
CREATE INDEX idx_menu_item_size_toppings_active ON menu_item_size_toppings(is_active);

-- Topping categories
CREATE INDEX idx_topping_categories_menu_category ON topping_categories(menu_item_category_id);
CREATE INDEX idx_topping_categories_order ON topping_categories(order_num);
CREATE INDEX idx_topping_categories_active ON topping_categories(is_active);

-- Toppings
CREATE INDEX idx_toppings_category ON toppings(category_id);
CREATE INDEX idx_toppings_menu_category ON toppings(menu_item_category_id);
CREATE INDEX idx_toppings_active ON toppings(is_active);

-- Images
CREATE INDEX idx_images_name ON images(name);
CREATE INDEX idx_images_active ON images(is_active);
CREATE INDEX idx_images_storage_path ON images(storage_path);

-- Other tables
CREATE INDEX idx_carousel_order ON carousel_images(order_num);
CREATE INDEX idx_carousel_active ON carousel_images(is_active);
CREATE INDEX idx_favorites_order ON customer_favorites(order_num);
CREATE INDEX idx_favorites_active ON customer_favorites(is_active);
CREATE INDEX idx_about_sections_order ON about_sections(order_num);
CREATE INDEX idx_about_sections_active ON about_sections(is_active);
CREATE INDEX idx_specials_active ON specials(is_active);
CREATE INDEX idx_specials_dates ON specials(start_date, end_date);

-- ============================================================
-- UPDATED_AT TRIGGERS
-- ============================================================

CREATE TRIGGER update_categories_updated_at 
BEFORE UPDATE ON categories FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();

CREATE TRIGGER update_menu_sub_categories_updated_at 
BEFORE UPDATE ON menu_sub_categories FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();

CREATE TRIGGER update_menu_items_updated_at 
BEFORE UPDATE ON menu_items FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();

CREATE TRIGGER update_category_sizes_updated_at 
BEFORE UPDATE ON category_sizes FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();

CREATE TRIGGER update_menu_item_sizes_updated_at 
BEFORE UPDATE ON menu_item_sizes FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();

CREATE TRIGGER update_menu_item_size_toppings_updated_at 
BEFORE UPDATE ON menu_item_size_toppings FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();

CREATE TRIGGER update_toppings_updated_at 
BEFORE UPDATE ON toppings FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();

CREATE TRIGGER update_topping_categories_updated_at 
BEFORE UPDATE ON topping_categories FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();

CREATE TRIGGER update_specials_updated_at 
BEFORE UPDATE ON specials FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();

CREATE TRIGGER update_carousel_images_updated_at 
BEFORE UPDATE ON carousel_images FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();

CREATE TRIGGER update_customer_favorites_updated_at 
BEFORE UPDATE ON customer_favorites FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();

CREATE TRIGGER update_settings_updated_at 
BEFORE UPDATE ON settings FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();

CREATE TRIGGER update_about_sections_updated_at 
BEFORE UPDATE ON about_sections FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();

CREATE TRIGGER update_images_updated_at 
BEFORE UPDATE ON images FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();

-- ============================================================
-- SAMPLE DATA
-- ============================================================

-- Insert default settings
INSERT INTO settings (id, tax_rate, delivery_fee) 
VALUES ('00000000-0000-0000-0000-000000000001', 8.5, 2.99)
ON CONFLICT (id) DO NOTHING;

-- Sample categories
INSERT INTO categories (id, name, is_active, order_num) VALUES 
('11111111-1111-1111-1111-111111111111', 'Pizza', true, 1),
('22222222-2222-2222-2222-222222222222', 'Wings', true, 2),
('33333333-3333-3333-3333-333333333333', 'Appetizers', true, 3),
('44444444-4444-4444-4444-444444444444', 'Salads', true, 4),
('55555555-5555-5555-5555-555555555555', 'Beverages', true, 5)
ON CONFLICT (id) DO NOTHING;

-- Sample sizes for Pizza category
INSERT INTO category_sizes (id, category_id, size_name, display_order, is_active) VALUES 
('a1111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', '7"', 1, true),
('a2222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '10"', 2, true),
('a3333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', '12"', 3, true),
('a4444444-4444-4444-4444-444444444444', '11111111-1111-1111-1111-111111111111', '14"', 4, true),
('a5555555-5555-5555-5555-555555555555', '11111111-1111-1111-1111-111111111111', '16"', 5, true)
ON CONFLICT (id) DO NOTHING;

-- Sample sizes for Wings category
INSERT INTO category_sizes (id, category_id, size_name, display_order, is_active) VALUES 
('b1111111-1111-1111-1111-111111111111', '22222222-2222-2222-2222-222222222222', '2lbs', 1, true),
('b2222222-2222-2222-2222-222222222222', '22222222-2222-2222-2222-222222222222', '5lbs', 2, true),
('b3333333-3333-3333-3333-333333333333', '22222222-2222-2222-2222-222222222222', '5-Piece', 3, true),
('b4444444-4444-4444-4444-444444444444', '22222222-2222-2222-2222-222222222222', '8-Piece', 4, true)
ON CONFLICT (id) DO NOTHING;

-- Sample sizes for Beverages category
INSERT INTO category_sizes (id, category_id, size_name, display_order, is_active) VALUES 
('c1111111-1111-1111-1111-111111111111', '55555555-5555-5555-5555-555555555555', 'Small', 1, true),
('c2222222-2222-2222-2222-222222222222', '55555555-5555-5555-5555-555555555555', 'Medium', 2, true),
('c3333333-3333-3333-3333-333333333333', '55555555-5555-5555-5555-555555555555', 'Large', 3, true)
ON CONFLICT (id) DO NOTHING;

-- Sample sub-categories
INSERT INTO menu_sub_categories (id, name, category_id, display_order, is_active) VALUES 
('s1111111-1111-1111-1111-111111111111', 'Specialty Pizzas', '11111111-1111-1111-1111-111111111111', 1, true),
('s2222222-2222-2222-2222-222222222222', 'Build Your Own', '11111111-1111-1111-1111-111111111111', 2, true),
('s3333333-3333-3333-3333-333333333333', 'Boneless Wings', '22222222-2222-2222-2222-222222222222', 1, true),
('s4444444-4444-4444-4444-444444444444', 'Traditional Wings', '22222222-2222-2222-2222-222222222222', 2, true)
ON CONFLICT (id) DO NOTHING;

-- Sample sub-category sizes (Boneless Wings uses weight sizes, Traditional Wings uses piece sizes)
INSERT INTO sub_category_sizes (sub_category_id, category_size_id) VALUES 
('s3333333-3333-3333-3333-333333333333', 'b1111111-1111-1111-1111-111111111111'), -- Boneless: 2lbs
('s3333333-3333-3333-3333-333333333333', 'b2222222-2222-2222-2222-222222222222'), -- Boneless: 5lbs
('s4444444-4444-4444-4444-444444444444', 'b3333333-3333-3333-3333-333333333333'), -- Traditional: 5-Piece
('s4444444-4444-4444-4444-444444444444', 'b4444444-4444-4444-4444-444444444444')  -- Traditional: 8-Piece
ON CONFLICT (sub_category_id, category_size_id) DO NOTHING;

-- Sample menu items
INSERT INTO menu_items (id, name, description, category_id, sub_category_id, is_active) VALUES 
('m1111111-1111-1111-1111-111111111111', 'Pepperoni Pizza', 'Edge to edge pepperoni, topped with more pepperoni', '11111111-1111-1111-1111-111111111111', 's1111111-1111-1111-1111-111111111111', true),
('m2222222-2222-2222-2222-222222222222', 'Supreme Pizza', 'Sausage, Pepperoni, Mushrooms, Onions, Green Peppers, Black Olives', '11111111-1111-1111-1111-111111111111', 's1111111-1111-1111-1111-111111111111', true),
('m3333333-3333-3333-3333-333333333333', 'Buffalo Wings', 'Classic buffalo sauce with your choice of heat level', '22222222-2222-2222-2222-222222222222', 's4444444-4444-4444-4444-444444444444', true),
('m4444444-4444-4444-4444-444444444444', 'BBQ Boneless Wings', 'Tender boneless wings tossed in sweet BBQ sauce', '22222222-2222-2222-2222-222222222222', 's3333333-3333-3333-3333-333333333333', true)
ON CONFLICT (id) DO NOTHING;

-- Sample menu item pricing (size-based)
INSERT INTO menu_item_sizes (menu_item_id, category_size_id, price) VALUES 
-- Pepperoni Pizza pricing
('m1111111-1111-1111-1111-111111111111', 'a1111111-1111-1111-1111-111111111111', 8.99),  -- 7"
('m1111111-1111-1111-1111-111111111111', 'a2222222-2222-2222-2222-222222222222', 12.99), -- 10"
('m1111111-1111-1111-1111-111111111111', 'a3333333-3333-3333-3333-333333333333', 15.99), -- 12"
('m1111111-1111-1111-1111-111111111111', 'a4444444-4444-4444-4444-444444444444', 18.99), -- 14"
('m1111111-1111-1111-1111-111111111111', 'a5555555-5555-5555-5555-555555555555', 21.99), -- 16"

-- Supreme Pizza pricing
('m2222222-2222-2222-2222-222222222222', 'a1111111-1111-1111-1111-111111111111', 10.99), -- 7"
('m2222222-2222-2222-2222-222222222222', 'a2222222-2222-2222-2222-222222222222', 14.99), -- 10"
('m2222222-2222-2222-2222-222222222222', 'a3333333-3333-3333-3333-333333333333', 17.99), -- 12"
('m2222222-2222-2222-2222-222222222222', 'a4444444-4444-4444-4444-444444444444', 20.99), -- 14"
('m2222222-2222-2222-2222-222222222222', 'a5555555-5555-5555-5555-555555555555', 23.99), -- 16"

-- Buffalo Wings pricing (Traditional - by pieces)
('m3333333-3333-3333-3333-333333333333', 'b3333333-3333-3333-3333-333333333333', 7.99),  -- 5-Piece
('m3333333-3333-3333-3333-333333333333', 'b4444444-4444-4444-4444-444444444444', 12.99), -- 8-Piece

-- BBQ Boneless Wings pricing (by weight)
('m4444444-4444-4444-4444-444444444444', 'b1111111-1111-1111-1111-111111111111', 14.99), -- 2lbs
('m4444444-4444-4444-4444-444444444444', 'b2222222-2222-2222-2222-222222222222', 32.99)  -- 5lbs
ON CONFLICT (menu_item_id, category_size_id) DO NOTHING;

-- Sample topping categories
INSERT INTO topping_categories (id, name, menu_item_category_id, order_num, is_active) VALUES 
('t1111111-1111-1111-1111-111111111111', 'Cheese', '11111111-1111-1111-1111-111111111111', 1, true),
('t2222222-2222-2222-2222-222222222222', 'Meats', '11111111-1111-1111-1111-111111111111', 2, true),
('t3333333-3333-3333-3333-333333333333', 'Vegetables', '11111111-1111-1111-1111-111111111111', 3, true),
('t4444444-4444-4444-4444-444444444444', 'Sauces', '22222222-2222-2222-2222-222222222222', 1, true)
ON CONFLICT (id) DO NOTHING;

-- Sample toppings
INSERT INTO toppings (id, name, price, category_id, menu_item_category_id, is_active) VALUES 
-- Pizza cheese toppings
('tp111111-1111-1111-1111-111111111111', 'Extra Cheese', 1.50, 't1111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', true),
('tp222222-2222-2222-2222-222222222222', 'Mozzarella', 1.00, 't1111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', true),

-- Pizza meat toppings
('tp333333-3333-3333-3333-333333333333', 'Pepperoni', 1.50, 't2222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', true),
('tp444444-4444-4444-4444-444444444444', 'Italian Sausage', 1.75, 't2222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', true),
('tp555555-5555-5555-5555-555555555555', 'Ground Beef', 1.75, 't2222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', true),

-- Pizza vegetable toppings
('tp666666-6666-6666-6666-666666666666', 'Mushrooms', 1.25, 't3333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', true),
('tp777777-7777-7777-7777-777777777777', 'Green Peppers', 1.25, 't3333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', true),
('tp888888-8888-8888-8888-888888888888', 'Onions', 1.25, 't3333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', true),

-- Wing sauces
('tw111111-1111-1111-1111-111111111111', 'Buffalo Sauce', 0.00, 't4444444-4444-4444-4444-444444444444', '22222222-2222-2222-2222-222222222222', true),
('tw222222-2222-2222-2222-222222222222', 'BBQ Sauce', 0.00, 't4444444-4444-4444-4444-444444444444', '22222222-2222-2222-2222-222222222222', true),
('tw333333-3333-3333-3333-333333333333', 'Honey Mustard', 0.00, 't4444444-4444-4444-4444-444444444444', '22222222-2222-2222-2222-222222222222', true)
ON CONFLICT (id) DO NOTHING;

-- Sample customer favorites
INSERT INTO customer_favorites (title, description, icon, order_num, is_active) VALUES 
('Fresh Ingredients', 'We use only the freshest ingredients in all our dishes', '🥬', 1, true),
('Fast Delivery', 'Hot food delivered to your door in 30 minutes or less', '🚚', 2, true),
('Family Owned', 'Proudly serving the community since 1985', '👨‍👩‍👧‍👦', 3, true),
('Made to Order', 'Every pizza is hand-crafted to your specifications', '👨‍🍳', 4, true)
ON CONFLICT DO NOTHING;

-- Sample about sections
INSERT INTO about_sections (type, title, content, order_num, is_active) VALUES 
('text', 'Our Story', 'Pronto Pizza has been serving delicious, authentic pizza to our community since 1985. What started as a small family business has grown into a beloved local institution.', 1, true),
('text', 'Our Mission', 'We are committed to providing the highest quality pizza using fresh ingredients and traditional recipes passed down through generations.', 2, true)
ON CONFLICT DO NOTHING;

-- ============================================================
-- ROW LEVEL SECURITY (OPTIONAL - UNCOMMENT IF NEEDED)
-- ============================================================

-- Enable RLS on all tables
-- ALTER TABLE categories ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE menu_sub_categories ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE category_sizes ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE sub_category_sizes ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE menu_items ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE menu_item_sizes ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE menu_item_size_toppings ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE topping_categories ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE toppings ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE specials ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE carousel_images ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE customer_favorites ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE about_sections ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE images ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE settings ENABLE ROW LEVEL SECURITY;

-- Example RLS policies (adjust based on your authentication needs)
-- CREATE POLICY "Allow all operations for authenticated users" ON categories FOR ALL USING (true);
-- CREATE POLICY "Allow all operations for authenticated users" ON menu_sub_categories FOR ALL USING (true);
-- CREATE POLICY "Allow all operations for authenticated users" ON category_sizes FOR ALL USING (true);
-- CREATE POLICY "Allow all operations for authenticated users" ON sub_category_sizes FOR ALL USING (true);
-- CREATE POLICY "Allow all operations for authenticated users" ON menu_items FOR ALL USING (true);
-- CREATE POLICY "Allow all operations for authenticated users" ON menu_item_sizes FOR ALL USING (true);
-- CREATE POLICY "Allow all operations for authenticated users" ON menu_item_size_toppings FOR ALL USING (true);
-- CREATE POLICY "Allow all operations for authenticated users" ON topping_categories FOR ALL USING (true);
-- CREATE POLICY "Allow all operations for authenticated users" ON toppings FOR ALL USING (true);
-- CREATE POLICY "Allow all operations for authenticated users" ON specials FOR ALL USING (true);
-- CREATE POLICY "Allow all operations for authenticated users" ON carousel_images FOR ALL USING (true);
-- CREATE POLICY "Allow all operations for authenticated users" ON customer_favorites FOR ALL USING (true);
-- CREATE POLICY "Allow all operations for authenticated users" ON about_sections FOR ALL USING (true);
-- CREATE POLICY "Allow all operations for authenticated users" ON images FOR ALL USING (true);
-- CREATE POLICY "Allow all operations for authenticated users" ON settings FOR ALL USING (true);

-- ============================================================
-- SCHEMA CREATION COMPLETE
-- ============================================================

-- This schema provides:
-- 1. Category-level size management (Pizza: 7", 10", 12", 14", 16")
-- 2. Sub-category size selection with checkboxes
-- 3. Menu item size-based pricing
-- 4. Size-specific topping availability management
-- 5. Complete content management for restaurant website
-- 6. Full CRUD operations support
-- 7. Proper indexing for performance
-- 8. Sample data to get started

-- To use this schema:
-- 1. Copy and paste this entire script into your Supabase SQL editor
-- 2. Run the script to create all tables and sample data
-- 3. Adjust the sample data as needed for your restaurant
-- 4. Enable RLS policies if you need authentication-based access control
